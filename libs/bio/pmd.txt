fopen(*.pmd)

58个字节 -> 文件头

4个字节(uint) -> 骨骼数量
前面骨骼数量的骨骼数据块{
	4个字节(uint) -> 骨骼名称字符数;
	前面骨骼名称字符数个字节 -> 骨骼名称;
	4个字节(uint) -> 骨骼索引;
}

4个字节(uint) -> Mesh数量
前面Mesh数量的数据块{
	4个字节(uint) -> Mesh名称字符数;
	前面Mesh名称字符数个字节 -> Mesh名称;
	4个字节(uint) -> Mesh索引;
}

4个字节(uint) -> 全部是0

4个字节(uint) -> 骨骼数量
前面骨骼数量的数据块{
	4个字节(int) -> 父骨骼索引;
	26 * 4个字节(float[26]) -> 26个浮点数, 索引7, 8, 9 为该骨骼的移动变换数据;
}

4个字节(uint) -> Material数量
前面Material数量的数据块{
	4个字节(uint) -> Material索引;
	32个字节 -> 全部是0;
	4个字节(uint) -> Mesh数量;
	前面Mesh数量 * 4个字节(uint) -> 纹理索引数组;

	4个字节 -> 全部是0;
	4个字节(uint) -> 仍然是前面的Mesh数量;

	前面Mesh数量的数据块{
		4个字节(uint) -> 必须是64, 否则可能数据有误;
		4个字节(uint) -> 顶点数量;
		(前面顶点数量 + 1) * 2个字节 -> predata;
		2个字节 -> 全部是0;
		前面顶点数量的顶点数据块(float[16] == 64) -> {
			索引0, 1, 2 -> 顶点位置;
			索引3, 4 -> 第一个关联骨骼权重, 第二个关联骨骼权重(如果第一个骨骼权重小于1, 则有);
			索引5, 6 -> 第一个关联骨骼索引, 第二个关联骨骼索引(如果第一个骨骼权重小于1, 则有);
			索引7, 8, 9 -> 法线;
			索引10, 11 -> 纹理坐标(UV);
			索引12, 13, 14, 15 -> 颜色(RGBA);
		};	
	};

	4个字节(uint) -> 关联的骨骼数量;
	前面关联的骨骼数量的数据块{
		4个字节(uint) -> 骨骼索引;
		52个字节 -> UNUSED;
		4 * 4个字节(float[4]) -> 骨骼的XYZ, 为多余数据;
	};
}

4个字节(uint) -> 纹理文件数量
前面纹理文件数量的数据块{
	72个字节 -> 纹理数据和其他;
	4个字节(uint) -> 纹理文件名字符数;
	前面纹理文件名字符数个字节 -> 纹理文件名;
}

fclose(*pmd)
